// Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

//USBSRV
//Component tests
LOAD_SUITE T_UsbManagerServer

RUN_UTILS MkDir C:\testdata\
RUN_UTILS MkDir C:\testdata\config\
RUN_UTILS CopyFile Z:\testdata\config\stub1cc.ini C:\testdata\config\stub1cc.ini
RUN_UTILS CopyFile Z:\testdata\config\stub2cc.ini C:\testdata\config\stub2cc.ini
RUN_UTILS CopyFile Z:\testdata\config\stub3cc.ini C:\testdata\config\stub3cc.ini
RUN_UTILS MkDir c:\private\
RUN_UTILS MkDir c:\private\101fe1db\
// remove resource file if it remain here from previous tests
RUN_UTILS MakeReadWrite c:\private\101fe1db\usbman.r01
RUN_UTILS run_utils delete c:\private\101fe1db\*.*

// Delay 3 seconds for RUN_UTILS to complete
DELAY 3000

//! @SYMTestCaseID T_LoadPersonalitiesmissingFile
//! @SYMTestType CT
//! @SYMTestCaseDesc Test startup USB Server and loading of personality list from missing r01 file.
//! @SYMFssID USB/DynamicClassChange/1
//! @SYMFssID USB/DynamicClassChange/1.3.1
//! @SYMTestActions Create a session with  CUsbServer. It's cause creation of new 
//! CUsbDevice object which try to read personality list from default RSC file when missing r01 file.
//! @SYMTestExpectedResults RUsb::Conect() and start() method  should successful with RSC file
//! @SYMTestPriority Low
//! @SYMTestStatus Defined
START_TESTCASE T_LoadPersonalitiesmissingFile
RUN_TEST_STEP 100 T_UsbManagerServer CUsbLoadPersonalityMissing z:\testdata\config\t_usbmancomponent.ini UsbLoadPersonalityMissing
END_TESTCASE T_LoadPersonalitiesmissingFile

