EXPORTS
	??0CFdcPlugin@@IAE@AAVMFdcPluginObserver@@@Z @ 1 NONAME ; CFdcPlugin::CFdcPlugin(class MFdcPluginObserver &)
	??1CFdcPlugin@@MAE@XZ @ 2 NONAME ; CFdcPlugin::~CFdcPlugin(void)
	?Extension_@CFdcPlugin@@MAEHIAAPAXPAX@Z @ 3 NONAME ; int CFdcPlugin::Extension_(unsigned int, void * &, void *)
	?GetManufacturerStringDescriptor@MFdcPluginObserver@@QAEHIIAAV?$TBuf@$0IA@@@@Z @ 4 NONAME ; int MFdcPluginObserver::GetManufacturerStringDescriptor(unsigned int, unsigned int, class TBuf<128> &)
	?GetProductStringDescriptor@MFdcPluginObserver@@QAEHIIAAV?$TBuf@$0IA@@@@Z @ 5 NONAME ; int MFdcPluginObserver::GetProductStringDescriptor(unsigned int, unsigned int, class TBuf<128> &)
	?GetSupportedLanguagesL@MFdcPluginObserver@@QAEABV?$RArray@I@@I@Z @ 6 NONAME ; class RArray<unsigned int> const & MFdcPluginObserver::GetSupportedLanguagesL(unsigned int)
	?NewL@CFdcPlugin@@CAPAV1@VTUid@@AAVMFdcPluginObserver@@@Z @ 7 NONAME ; class CFdcPlugin * CFdcPlugin::NewL(class TUid, class MFdcPluginObserver &)
	?Observer@CFdcPlugin@@IAEAAVMFdcPluginObserver@@XZ @ 8 NONAME ; class MFdcPluginObserver & CFdcPlugin::Observer(void)
	?TokenForInterface@MFdcPluginObserver@@QAEKE@Z @ 9 NONAME ; unsigned long MFdcPluginObserver::TokenForInterface(unsigned char)
	?GetSerialNumberStringDescriptor@MFdcPluginObserver@@QAEHIIAAV?$TBuf@$0IA@@@@Z @ 10 NONAME ; int MFdcPluginObserver::GetSerialNumberStringDescriptor(unsigned int, unsigned int, class TBuf<128> &)

